-------------
changes from version 1.2 to 1.3:
  fix bugs
  option to turn on/off cron overlap
  autosave
  copy/paste
  
- Replace all files
- CLEAR CACHE
-------------


-------------
changes from version 1.1 to 1.2:
(avoid cron overtask)
ALTER TABLE `np_boost_schedule` ADD `running` INT(11) NULL AFTER `last_action_date`;
- Replace all files
  if you have frontend customization, you can replace only these:
    - ScheduleModel.php
    - cron.php
- CLEAR CACHE
-------------


-------------
changes from version 1.0 to 1.1:
(small fixes and wizard)
- Replace all the files and...
- CLEAR CACHE
-------------

-------------
changes from version 0.9.2 to 1.0;
- Replace all the files and...
- CLEAR CACHE
-------------

-------------
//changes from version 0.9.1 to 0.9.2;
Just replace the files
-------------

-------------
//changes from version 0.9.0 to 0.9.1;
ALTER TABLE `np_boost_schedule` CHANGE `dms` `dms` LONGTEXT NOT NULL;
ALTER TABLE `np_boost_schedule` CHANGE `blacklist` `blacklist` LONGTEXT NOT NULL;
ALTER TABLE `np_boost_schedule` CHANGE `bad_words` `bad_words` LONGTEXT NOT NULL;
ALTER TABLE `np_boost_schedule` CHANGE `whitelist` `whitelist` LONGTEXT NOT NULL;
ALTER TABLE `np_boost_schedule` CHANGE `data` `data` LONGTEXT NOT NULL;
ALTER TABLE `np_boost_schedule` CHANGE `items` `items` LONGTEXT NOT NULL;
ALTER TABLE `np_boost_log` CHANGE `data` `data` LONGTEXT NOT NULL;
ALTER TABLE `np_boost_log` ADD `error_code` INT(11) NULL AFTER `unfollowed`;
-------------

-------------
//changes from version 0.8 to 0.9;
ALTER TABLE `np_boost_schedule` CHANGE `action_dm` `action_welcomedm` TINYINT(1) NOT NULL;
ALTER TABLE `np_boost_schedule` CHANGE `action_stories` `action_viewstory` TINYINT(1) NOT NULL;


DROP TABLE IF EXISTS np_boost_new_followers;
CREATE TABLE `np_boost_new_followers` (
    `id` int(11) NOT NULL,
    `user_id` int(11) NOT NULL,
    `account_id` int(11) NOT NULL,
    `action` varchar(50) NOT NULL,
    `user_pk` varchar(50) NOT NULL, 
    `username` varchar(250) NOT NULL,
    `target` varchar(200) CHARACTER SET utf8 DEFAULT NULL,
    `target_value` varchar(80) DEFAULT NULL,
    `date` datetime NOT NULL
) ENGINE=InnoDB;
  
ALTER TABLE `np_boost_new_followers`
    ADD PRIMARY KEY (`id`),
    ADD KEY `user_id` (`user_id`),
    ADD KEY `account_id` (`account_id`),
    ADD KEY `user_pk` (`user_pk`),
    ADD KEY `target_id` (`target_value`),
    ADD KEY `target` (`target`);
    
ALTER TABLE `np_boost_new_followers`
    MODIFY `id` int(11) NOT NULL AUTO_INCREMENT;

  ALTER TABLE `np_boost_new_followers`
    ADD CONSTRAINT `ibfk_5b5a2b4de6y5u` FOREIGN KEY (`user_id`) REFERENCES `np_users` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    ADD CONSTRAINT `ibfk_5b5a2b4de9q3z` FOREIGN KEY (`account_id`) REFERENCES `np_accounts` (`id`) ON DELETE CASCADE ON UPDATE CASCADE;


------------------
//changes to version 0.8
------------------
ALTER TABLE `np_boost_schedule` 
  ADD `dms` TEXT NOT NULL AFTER `comments`,
  ADD `all_schedules` TEXT NOT NULL AFTER `schedule_date`;
  
ALTER TABLE `np_boost_schedule`  
  ADD `action_dm` TINYINT(1) NOT NULL  AFTER `action_comment`,  
  ADD `action_repost` TINYINT(1) NOT NULL  AFTER `action_dm`,  
  ADD `action_stories` TINYINT(1) NOT NULL  AFTER `action_repost`;
  
ALTER TABLE `np_boost_log` 
  ADD `user_pk` VARCHAR(50) NOT NULL AFTER `source_pk`, ADD INDEX `user_pk` (`user_pk`);

CREATE TABLE `np_boost_targets` (
  `id` int(11) NOT NULL,
  `user_id` int(11) NOT NULL,
  `account_id` int(11) NOT NULL,
  `type` varchar(50) NOT NULL,
  `value` varchar(256) NOT NULL,
  `target_id` varchar(50) NOT NULL,
  `items` MEDIUMTEXT NOT NULL,
  `data` text NOT NULL
) ENGINE=InnoDB;
          
          
ALTER TABLE `np_boost_targets`
  ADD PRIMARY KEY (`id`),
  ADD KEY `user_id` (`user_id`),
  ADD KEY `account_id` (`account_id`);

ALTER TABLE `np_boost_targets` MODIFY `id` int(11) NOT NULL AUTO_INCREMENT;

ALTER TABLE `np_boost_targets`
  ADD CONSTRAINT `ibfk_5b5a2b4de80bb` FOREIGN KEY (`user_id`) REFERENCES `np_users` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
  ADD CONSTRAINT `ibfk_5b5a2b4de80cc` FOREIGN KEY (`account_id`) REFERENCES `np_accounts` (`id`) ON DELETE CASCADE ON UPDATE CASCADE;
